{
  "contractName": "MasterContract",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "storeUser",
      "outputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "email",
          "type": "string"
        },
        {
          "internalType": "bool",
          "name": "status",
          "type": "bool"
        },
        {
          "internalType": "string",
          "name": "publicKey",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "string",
          "name": "userName",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "userEmail",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "publicKey",
          "type": "string"
        }
      ],
      "name": "registerUser",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getAllUsers",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "users",
          "type": "address[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[],\"name\":\"getAllUsers\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"users\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"userName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"userEmail\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"publicKey\",\"type\":\"string\"}],\"name\":\"registerUser\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"storeUser\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"email\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"status\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"publicKey\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"registerUser(string,string,string)\":{\"details\":\"Register User\",\"params\":{\"userEmail\":\": User mail id\",\"userName\":\": User Name\"}}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/home/shubham/ConsensoLabs/secure-docstore-contracts/contracts/MasterContract.sol\":\"MasterContract\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/shubham/ConsensoLabs/secure-docstore-contracts/contracts/MasterContract.sol\":{\"keccak256\":\"0x2524cbbd9d38ed898a8d46034fb9e8918719cfe8daeb230482eeee309e59a3cb\",\"urls\":[\"bzz-raw://5a8ba9c208faaea7fd1756145b0502c50f513b16044576e957fd055cc3215219\",\"dweb:/ipfs/QmbnJRg5ywHaTxmXSu3y4LCcdNvHoArQNg8uCQ8TQNYAqZ\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50610aac806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063d637dcfa14610046578063d7cab33814610062578063e2842d7914610095575b600080fd5b610060600480360361005b91908101906106d3565b6100b3565b005b61007c600480360361007791908101906106aa565b610309565b60405161008c9493929190610899565b60405180910390f35b61009d61050e565b6040516100aa9190610877565b60405180910390f35b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160009054906101000a900460ff1615610142576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610139906108f3565b60405180910390fd5b826000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001908051906020019061019792919061059c565b50816000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010190805190602001906101ed92919061059c565b50806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301908051906020019061024392919061059c565b5060016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160006101000a81548160ff02191690831515021790555060013390806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050565b6000602052806000526040600020600091509050806000018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156103b55780601f1061038a576101008083540402835291602001916103b5565b820191906000526020600020905b81548152906001019060200180831161039857829003601f168201915b505050505090806001018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156104535780601f1061042857610100808354040283529160200191610453565b820191906000526020600020905b81548152906001019060200180831161043657829003601f168201915b5050505050908060020160009054906101000a900460ff1690806003018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156105045780601f106104d957610100808354040283529160200191610504565b820191906000526020600020905b8154815290600101906020018083116104e757829003601f168201915b5050505050905084565b6060600180548060200260200160405190810160405280929190818152602001828054801561059257602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610548575b5050505050905090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106105dd57805160ff191683800117855561060b565b8280016001018555821561060b579182015b8281111561060a5782518255916020019190600101906105ef565b5b509050610618919061061c565b5090565b61063e91905b8082111561063a576000816000905550600101610622565b5090565b90565b60008135905061065081610a52565b92915050565b600082601f83011261066757600080fd5b813561067a61067582610940565b610913565b9150808252602083016020830185838301111561069657600080fd5b6106a18382846109ff565b50505092915050565b6000602082840312156106bc57600080fd5b60006106ca84828501610641565b91505092915050565b6000806000606084860312156106e857600080fd5b600084013567ffffffffffffffff81111561070257600080fd5b61070e86828701610656565b935050602084013567ffffffffffffffff81111561072b57600080fd5b61073786828701610656565b925050604084013567ffffffffffffffff81111561075457600080fd5b61076086828701610656565b9150509250925092565b60006107768383610782565b60208301905092915050565b61078b816109c1565b82525050565b600061079c8261097c565b6107a6818561099f565b93506107b18361096c565b8060005b838110156107e25781516107c9888261076a565b97506107d483610992565b9250506001810190506107b5565b5085935050505092915050565b6107f8816109d3565b82525050565b600061080982610987565b61081381856109b0565b9350610823818560208601610a0e565b61082c81610a41565b840191505092915050565b60006108446020836109b0565b91507f53686f756c64206e6f742062652072656769737465726564206265666f7265216000830152602082019050919050565b600060208201905081810360008301526108918184610791565b905092915050565b600060808201905081810360008301526108b381876107fe565b905081810360208301526108c781866107fe565b90506108d660408301856107ef565b81810360608301526108e881846107fe565b905095945050505050565b6000602082019050818103600083015261090c81610837565b9050919050565b6000604051905081810181811067ffffffffffffffff8211171561093657600080fd5b8060405250919050565b600067ffffffffffffffff82111561095757600080fd5b601f19601f8301169050602081019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b60006109cc826109df565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b82818337600083830152505050565b60005b83811015610a2c578082015181840152602081019050610a11565b83811115610a3b576000848401525b50505050565b6000601f19601f8301169050919050565b610a5b816109c1565b8114610a6657600080fd5b5056fea365627a7a723158200066894e0a523fc2c393fcc73dcc845a3621d672de8f9b71d6ff4f4ce5d8b0b56c6578706572696d656e74616cf564736f6c63430005100040",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100415760003560e01c8063d637dcfa14610046578063d7cab33814610062578063e2842d7914610095575b600080fd5b610060600480360361005b91908101906106d3565b6100b3565b005b61007c600480360361007791908101906106aa565b610309565b60405161008c9493929190610899565b60405180910390f35b61009d61050e565b6040516100aa9190610877565b60405180910390f35b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160009054906101000a900460ff1615610142576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610139906108f3565b60405180910390fd5b826000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001908051906020019061019792919061059c565b50816000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010190805190602001906101ed92919061059c565b50806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301908051906020019061024392919061059c565b5060016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160006101000a81548160ff02191690831515021790555060013390806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050565b6000602052806000526040600020600091509050806000018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156103b55780601f1061038a576101008083540402835291602001916103b5565b820191906000526020600020905b81548152906001019060200180831161039857829003601f168201915b505050505090806001018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156104535780601f1061042857610100808354040283529160200191610453565b820191906000526020600020905b81548152906001019060200180831161043657829003601f168201915b5050505050908060020160009054906101000a900460ff1690806003018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156105045780601f106104d957610100808354040283529160200191610504565b820191906000526020600020905b8154815290600101906020018083116104e757829003601f168201915b5050505050905084565b6060600180548060200260200160405190810160405280929190818152602001828054801561059257602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610548575b5050505050905090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106105dd57805160ff191683800117855561060b565b8280016001018555821561060b579182015b8281111561060a5782518255916020019190600101906105ef565b5b509050610618919061061c565b5090565b61063e91905b8082111561063a576000816000905550600101610622565b5090565b90565b60008135905061065081610a52565b92915050565b600082601f83011261066757600080fd5b813561067a61067582610940565b610913565b9150808252602083016020830185838301111561069657600080fd5b6106a18382846109ff565b50505092915050565b6000602082840312156106bc57600080fd5b60006106ca84828501610641565b91505092915050565b6000806000606084860312156106e857600080fd5b600084013567ffffffffffffffff81111561070257600080fd5b61070e86828701610656565b935050602084013567ffffffffffffffff81111561072b57600080fd5b61073786828701610656565b925050604084013567ffffffffffffffff81111561075457600080fd5b61076086828701610656565b9150509250925092565b60006107768383610782565b60208301905092915050565b61078b816109c1565b82525050565b600061079c8261097c565b6107a6818561099f565b93506107b18361096c565b8060005b838110156107e25781516107c9888261076a565b97506107d483610992565b9250506001810190506107b5565b5085935050505092915050565b6107f8816109d3565b82525050565b600061080982610987565b61081381856109b0565b9350610823818560208601610a0e565b61082c81610a41565b840191505092915050565b60006108446020836109b0565b91507f53686f756c64206e6f742062652072656769737465726564206265666f7265216000830152602082019050919050565b600060208201905081810360008301526108918184610791565b905092915050565b600060808201905081810360008301526108b381876107fe565b905081810360208301526108c781866107fe565b90506108d660408301856107ef565b81810360608301526108e881846107fe565b905095945050505050565b6000602082019050818103600083015261090c81610837565b9050919050565b6000604051905081810181811067ffffffffffffffff8211171561093657600080fd5b8060405250919050565b600067ffffffffffffffff82111561095757600080fd5b601f19601f8301169050602081019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b60006109cc826109df565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b82818337600083830152505050565b60005b83811015610a2c578082015181840152602081019050610a11565b83811115610a3b576000848401525b50505050565b6000601f19601f8301169050919050565b610a5b816109c1565b8114610a6657600080fd5b5056fea365627a7a723158200066894e0a523fc2c393fcc73dcc845a3621d672de8f9b71d6ff4f4ce5d8b0b56c6578706572696d656e74616cf564736f6c63430005100040",
  "sourceMap": "67:1016:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;67:1016:0;;;;;;;",
  "deployedSourceMap": "67:1016:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;67:1016:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;509:460;;;;;;;;;;;;;;;;:::i;:::-;;264:45;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;975:105;;;:::i;:::-;;;;;;;;;;;;;;;;509:460;660:9;:21;670:10;660:21;;;;;;;;;;;;;;;:28;;;;;;;;;;;;659:29;651:74;;;;;;;;;;;;;;;;;;;;;;765:8;736:9;:21;746:10;736:21;;;;;;;;;;;;;;;:26;;:37;;;;;;;;;;;;:::i;:::-;;813:9;783;:21;793:10;783:21;;;;;;;;;;;;;;;:27;;:39;;;;;;;;;;;;:::i;:::-;;866:9;832;:21;842:10;832:21;;;;;;;;;;;;;;;:31;;:43;;;;;;;;;;;;:::i;:::-;;916:4;885:9;:21;895:10;885:21;;;;;;;;;;;;;;;:28;;;:35;;;;;;;;;;;;;;;;;;930:15;951:10;930:32;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;930:32:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;509:460;;;:::o;264:45::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;975:105::-;1018:22;1058:15;1051:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;975:105;:::o;67:1016::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5:130:-1:-;;85:6;72:20;63:29;;97:33;124:5;97:33;;;57:78;;;;;143:442;;245:3;238:4;230:6;226:17;222:27;212:2;;263:1;260;253:12;212:2;300:6;287:20;322:65;337:49;379:6;337:49;;;322:65;;;313:74;;407:6;400:5;393:21;443:4;435:6;431:17;476:4;469:5;465:16;511:3;502:6;497:3;493:16;490:25;487:2;;;528:1;525;518:12;487:2;538:41;572:6;567:3;562;538:41;;;205:380;;;;;;;;593:241;;697:2;685:9;676:7;672:23;668:32;665:2;;;713:1;710;703:12;665:2;748:1;765:53;810:7;801:6;790:9;786:22;765:53;;;755:63;;727:97;659:175;;;;;841:809;;;;1009:2;997:9;988:7;984:23;980:32;977:2;;;1025:1;1022;1015:12;977:2;1088:1;1077:9;1073:17;1060:31;1111:18;1103:6;1100:30;1097:2;;;1143:1;1140;1133:12;1097:2;1163:63;1218:7;1209:6;1198:9;1194:22;1163:63;;;1153:73;;1039:193;1291:2;1280:9;1276:18;1263:32;1315:18;1307:6;1304:30;1301:2;;;1347:1;1344;1337:12;1301:2;1367:63;1422:7;1413:6;1402:9;1398:22;1367:63;;;1357:73;;1242:194;1495:2;1484:9;1480:18;1467:32;1519:18;1511:6;1508:30;1505:2;;;1551:1;1548;1541:12;1505:2;1571:63;1626:7;1617:6;1606:9;1602:22;1571:63;;;1561:73;;1446:194;971:679;;;;;;1658:173;;1745:46;1787:3;1779:6;1745:46;;;1820:4;1815:3;1811:14;1797:28;;1738:93;;;;;1839:103;1912:24;1930:5;1912:24;;;1907:3;1900:37;1894:48;;;1980:690;;2125:54;2173:5;2125:54;;;2192:86;2271:6;2266:3;2192:86;;;2185:93;;2299:56;2349:5;2299:56;;;2375:7;2403:1;2388:260;2413:6;2410:1;2407:13;2388:260;;;2480:6;2474:13;2501:63;2560:3;2545:13;2501:63;;;2494:70;;2581:60;2634:6;2581:60;;;2571:70;;2445:203;2435:1;2432;2428:9;2423:14;;2388:260;;;2392:14;2661:3;2654:10;;2104:566;;;;;;;;2678:104;2755:21;2770:5;2755:21;;;2750:3;2743:34;2737:45;;;2789:339;;2897:35;2926:5;2897:35;;;2944:71;3008:6;3003:3;2944:71;;;2937:78;;3020:52;3065:6;3060:3;3053:4;3046:5;3042:16;3020:52;;;3093:29;3115:6;3093:29;;;3088:3;3084:39;3077:46;;2877:251;;;;;;3136:332;;3296:67;3360:2;3355:3;3296:67;;;3289:74;;3396:34;3392:1;3387:3;3383:11;3376:55;3459:2;3454:3;3450:12;3443:19;;3282:186;;;;3476:361;;3644:2;3633:9;3629:18;3621:26;;3694:9;3688:4;3684:20;3680:1;3669:9;3665:17;3658:47;3719:108;3822:4;3813:6;3719:108;;;3711:116;;3615:222;;;;;3844:775;;4088:3;4077:9;4073:19;4065:27;;4139:9;4133:4;4129:20;4125:1;4114:9;4110:17;4103:47;4164:74;4233:4;4224:6;4164:74;;;4156:82;;4286:9;4280:4;4276:20;4271:2;4260:9;4256:18;4249:48;4311:74;4380:4;4371:6;4311:74;;;4303:82;;4396:66;4458:2;4447:9;4443:18;4434:6;4396:66;;;4510:9;4504:4;4500:20;4495:2;4484:9;4480:18;4473:48;4535:74;4604:4;4595:6;4535:74;;;4527:82;;4059:560;;;;;;;;4626:407;;4817:2;4806:9;4802:18;4794:26;;4867:9;4861:4;4857:20;4853:1;4842:9;4838:17;4831:47;4892:131;5018:4;4892:131;;;4884:139;;4788:245;;;;5040:256;;5102:2;5096:9;5086:19;;5140:4;5132:6;5128:17;5239:6;5227:10;5224:22;5203:18;5191:10;5188:34;5185:62;5182:2;;;5260:1;5257;5250:12;5182:2;5280:10;5276:2;5269:22;5080:216;;;;;5303:322;;5447:18;5439:6;5436:30;5433:2;;;5479:1;5476;5469:12;5433:2;5546:4;5542:9;5535:4;5527:6;5523:17;5519:33;5511:41;;5610:4;5604;5600:15;5592:23;;5370:255;;;;5632:151;;5718:3;5710:11;;5756:4;5751:3;5747:14;5739:22;;5704:79;;;;5790:137;;5899:5;5893:12;5883:22;;5864:63;;;;5934:118;;6024:5;6018:12;6008:22;;5989:63;;;;6059:108;;6157:4;6152:3;6148:14;6140:22;;6134:33;;;;6175:178;;6305:6;6300:3;6293:19;6342:4;6337:3;6333:14;6318:29;;6286:67;;;;;6362:163;;6477:6;6472:3;6465:19;6514:4;6509:3;6505:14;6490:29;;6458:67;;;;;6533:91;;6595:24;6613:5;6595:24;;;6584:35;;6578:46;;;;6631:85;;6704:5;6697:13;6690:21;6679:32;;6673:43;;;;6723:121;;6796:42;6789:5;6785:54;6774:65;;6768:76;;;;6852:145;6933:6;6928:3;6923;6910:30;6989:1;6980:6;6975:3;6971:16;6964:27;6903:94;;;;7006:268;7071:1;7078:101;7092:6;7089:1;7086:13;7078:101;;;7168:1;7163:3;7159:11;7153:18;7149:1;7144:3;7140:11;7133:39;7114:2;7111:1;7107:10;7102:15;;7078:101;;;7194:6;7191:1;7188:13;7185:2;;;7259:1;7250:6;7245:3;7241:16;7234:27;7185:2;7055:219;;;;;7282:97;;7370:2;7366:7;7361:2;7354:5;7350:14;7346:28;7336:38;;7330:49;;;;7387:117;7456:24;7474:5;7456:24;;;7449:5;7446:35;7436:2;;7495:1;7492;7485:12;7436:2;7430:74;",
  "source": "pragma solidity >=0.5.0 <0.7.0;\npragma experimental ABIEncoderV2;\n\ncontract MasterContract {\n\n    struct UserSchema {\n        string name;\n        string email;\n        bool status;\n        string publicKey;\n    }\n\n    // Map to store all the registered users\n    mapping(address=>UserSchema) public storeUser;\n\n    // array to store registered users address\n    address[] registeredUsers;\n\n    /**\n     * @dev Register User\n     * @param userName: User Name\n     * @param userEmail: User mail id\n     */\n    function registerUser(\n        string memory userName,\n        string memory userEmail,\n        string memory publicKey\n    ) public{\n        require(!storeUser[msg.sender].status, \"Should not be registered before!\");\n\n        storeUser[msg.sender].name = userName;\n        storeUser[msg.sender].email = userEmail;\n        storeUser[msg.sender].publicKey = publicKey;\n        storeUser[msg.sender].status = true;\n        registeredUsers.push(msg.sender);\n    }\n\n    function getAllUsers() public view returns(address[] memory users){\n        return registeredUsers;\n    }\n\n}\n",
  "sourcePath": "/home/shubham/ConsensoLabs/secure-docstore-contracts/contracts/MasterContract.sol",
  "ast": {
    "absolutePath": "/home/shubham/ConsensoLabs/secure-docstore-contracts/contracts/MasterContract.sol",
    "exportedSymbols": {
      "MasterContract": [
        87
      ]
    },
    "id": 88,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          ">=",
          "0.5",
          ".0",
          "<",
          "0.7",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:31:0"
      },
      {
        "id": 2,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:33:0"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 87,
        "linearizedBaseContracts": [
          87
        ],
        "name": "MasterContract",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "MasterContract.UserSchema",
            "id": 11,
            "members": [
              {
                "constant": false,
                "id": 4,
                "name": "name",
                "nodeType": "VariableDeclaration",
                "scope": 11,
                "src": "126:11:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 3,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "126:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 6,
                "name": "email",
                "nodeType": "VariableDeclaration",
                "scope": 11,
                "src": "147:12:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 5,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "147:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 8,
                "name": "status",
                "nodeType": "VariableDeclaration",
                "scope": 11,
                "src": "169:11:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 7,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "169:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 10,
                "name": "publicKey",
                "nodeType": "VariableDeclaration",
                "scope": 11,
                "src": "190:16:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 9,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "190:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "UserSchema",
            "nodeType": "StructDefinition",
            "scope": 87,
            "src": "98:115:0",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 15,
            "name": "storeUser",
            "nodeType": "VariableDeclaration",
            "scope": 87,
            "src": "264:45:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserSchema_$11_storage_$",
              "typeString": "mapping(address => struct MasterContract.UserSchema)"
            },
            "typeName": {
              "id": 14,
              "keyType": {
                "id": 12,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "272:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "264:28:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserSchema_$11_storage_$",
                "typeString": "mapping(address => struct MasterContract.UserSchema)"
              },
              "valueType": {
                "contractScope": null,
                "id": 13,
                "name": "UserSchema",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 11,
                "src": "281:10:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_UserSchema_$11_storage_ptr",
                  "typeString": "struct MasterContract.UserSchema"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 18,
            "name": "registeredUsers",
            "nodeType": "VariableDeclaration",
            "scope": 87,
            "src": "363:25:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 16,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "363:7:0",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 17,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "363:9:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 76,
              "nodeType": "Block",
              "src": "641:328:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 33,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "659:29:0",
                        "subExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 28,
                              "name": "storeUser",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 15,
                              "src": "660:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserSchema_$11_storage_$",
                                "typeString": "mapping(address => struct MasterContract.UserSchema storage ref)"
                              }
                            },
                            "id": 31,
                            "indexExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 29,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 139,
                                "src": "670:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 30,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "670:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "660:21:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_UserSchema_$11_storage",
                              "typeString": "struct MasterContract.UserSchema storage ref"
                            }
                          },
                          "id": 32,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "status",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 8,
                          "src": "660:28:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "53686f756c64206e6f742062652072656769737465726564206265666f726521",
                        "id": 34,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "690:34:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0acc2f19e626cb0cf829ed19414cc0be46076d532ed8b9282cfa95da4f7f23cf",
                          "typeString": "literal_string \"Should not be registered before!\""
                        },
                        "value": "Should not be registered before!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0acc2f19e626cb0cf829ed19414cc0be46076d532ed8b9282cfa95da4f7f23cf",
                          "typeString": "literal_string \"Should not be registered before!\""
                        }
                      ],
                      "id": 27,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        142,
                        143
                      ],
                      "referencedDeclaration": 143,
                      "src": "651:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 35,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "651:74:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 36,
                  "nodeType": "ExpressionStatement",
                  "src": "651:74:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 43,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 37,
                          "name": "storeUser",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15,
                          "src": "736:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserSchema_$11_storage_$",
                            "typeString": "mapping(address => struct MasterContract.UserSchema storage ref)"
                          }
                        },
                        "id": 40,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 38,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 139,
                            "src": "746:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 39,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "746:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "736:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserSchema_$11_storage",
                          "typeString": "struct MasterContract.UserSchema storage ref"
                        }
                      },
                      "id": 41,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "name",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4,
                      "src": "736:26:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 42,
                      "name": "userName",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20,
                      "src": "765:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "736:37:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 44,
                  "nodeType": "ExpressionStatement",
                  "src": "736:37:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 51,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 45,
                          "name": "storeUser",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15,
                          "src": "783:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserSchema_$11_storage_$",
                            "typeString": "mapping(address => struct MasterContract.UserSchema storage ref)"
                          }
                        },
                        "id": 48,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 46,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 139,
                            "src": "793:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 47,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "793:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "783:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserSchema_$11_storage",
                          "typeString": "struct MasterContract.UserSchema storage ref"
                        }
                      },
                      "id": 49,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "email",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6,
                      "src": "783:27:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 50,
                      "name": "userEmail",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22,
                      "src": "813:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "783:39:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 52,
                  "nodeType": "ExpressionStatement",
                  "src": "783:39:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 59,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 53,
                          "name": "storeUser",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15,
                          "src": "832:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserSchema_$11_storage_$",
                            "typeString": "mapping(address => struct MasterContract.UserSchema storage ref)"
                          }
                        },
                        "id": 56,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 54,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 139,
                            "src": "842:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 55,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "842:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "832:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserSchema_$11_storage",
                          "typeString": "struct MasterContract.UserSchema storage ref"
                        }
                      },
                      "id": 57,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "publicKey",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10,
                      "src": "832:31:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 58,
                      "name": "publicKey",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24,
                      "src": "866:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "832:43:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 60,
                  "nodeType": "ExpressionStatement",
                  "src": "832:43:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 67,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 61,
                          "name": "storeUser",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15,
                          "src": "885:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserSchema_$11_storage_$",
                            "typeString": "mapping(address => struct MasterContract.UserSchema storage ref)"
                          }
                        },
                        "id": 64,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 62,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 139,
                            "src": "895:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 63,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "895:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "885:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserSchema_$11_storage",
                          "typeString": "struct MasterContract.UserSchema storage ref"
                        }
                      },
                      "id": 65,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "status",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8,
                      "src": "885:28:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 66,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "916:4:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "885:35:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 68,
                  "nodeType": "ExpressionStatement",
                  "src": "885:35:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 72,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 139,
                          "src": "951:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 73,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "951:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 69,
                        "name": "registeredUsers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18,
                        "src": "930:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 71,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "930:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) returns (uint256)"
                      }
                    },
                    "id": 74,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "930:32:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 75,
                  "nodeType": "ExpressionStatement",
                  "src": "930:32:0"
                }
              ]
            },
            "documentation": "@dev Register User\n@param userName: User Name\n@param userEmail: User mail id",
            "id": 77,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "registerUser",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 25,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 20,
                  "name": "userName",
                  "nodeType": "VariableDeclaration",
                  "scope": 77,
                  "src": "540:22:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 19,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "540:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 22,
                  "name": "userEmail",
                  "nodeType": "VariableDeclaration",
                  "scope": 77,
                  "src": "572:23:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 21,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "572:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24,
                  "name": "publicKey",
                  "nodeType": "VariableDeclaration",
                  "scope": 77,
                  "src": "605:23:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 23,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "605:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "530:104:0"
            },
            "returnParameters": {
              "id": 26,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "641:0:0"
            },
            "scope": 87,
            "src": "509:460:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 85,
              "nodeType": "Block",
              "src": "1041:39:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 83,
                    "name": "registeredUsers",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 18,
                    "src": "1058:15:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "functionReturnParameters": 82,
                  "id": 84,
                  "nodeType": "Return",
                  "src": "1051:22:0"
                }
              ]
            },
            "documentation": null,
            "id": 86,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAllUsers",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 78,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "995:2:0"
            },
            "returnParameters": {
              "id": 82,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 81,
                  "name": "users",
                  "nodeType": "VariableDeclaration",
                  "scope": 86,
                  "src": "1018:22:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 79,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1018:7:0",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 80,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "1018:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1017:24:0"
            },
            "scope": 87,
            "src": "975:105:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 88,
        "src": "67:1016:0"
      }
    ],
    "src": "0:1084:0"
  },
  "legacyAST": {
    "absolutePath": "/home/shubham/ConsensoLabs/secure-docstore-contracts/contracts/MasterContract.sol",
    "exportedSymbols": {
      "MasterContract": [
        87
      ]
    },
    "id": 88,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          ">=",
          "0.5",
          ".0",
          "<",
          "0.7",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:31:0"
      },
      {
        "id": 2,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:33:0"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 87,
        "linearizedBaseContracts": [
          87
        ],
        "name": "MasterContract",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "MasterContract.UserSchema",
            "id": 11,
            "members": [
              {
                "constant": false,
                "id": 4,
                "name": "name",
                "nodeType": "VariableDeclaration",
                "scope": 11,
                "src": "126:11:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 3,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "126:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 6,
                "name": "email",
                "nodeType": "VariableDeclaration",
                "scope": 11,
                "src": "147:12:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 5,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "147:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 8,
                "name": "status",
                "nodeType": "VariableDeclaration",
                "scope": 11,
                "src": "169:11:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 7,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "169:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 10,
                "name": "publicKey",
                "nodeType": "VariableDeclaration",
                "scope": 11,
                "src": "190:16:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 9,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "190:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "UserSchema",
            "nodeType": "StructDefinition",
            "scope": 87,
            "src": "98:115:0",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 15,
            "name": "storeUser",
            "nodeType": "VariableDeclaration",
            "scope": 87,
            "src": "264:45:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserSchema_$11_storage_$",
              "typeString": "mapping(address => struct MasterContract.UserSchema)"
            },
            "typeName": {
              "id": 14,
              "keyType": {
                "id": 12,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "272:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "264:28:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserSchema_$11_storage_$",
                "typeString": "mapping(address => struct MasterContract.UserSchema)"
              },
              "valueType": {
                "contractScope": null,
                "id": 13,
                "name": "UserSchema",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 11,
                "src": "281:10:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_UserSchema_$11_storage_ptr",
                  "typeString": "struct MasterContract.UserSchema"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 18,
            "name": "registeredUsers",
            "nodeType": "VariableDeclaration",
            "scope": 87,
            "src": "363:25:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 16,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "363:7:0",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 17,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "363:9:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 76,
              "nodeType": "Block",
              "src": "641:328:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 33,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "659:29:0",
                        "subExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 28,
                              "name": "storeUser",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 15,
                              "src": "660:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserSchema_$11_storage_$",
                                "typeString": "mapping(address => struct MasterContract.UserSchema storage ref)"
                              }
                            },
                            "id": 31,
                            "indexExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 29,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 139,
                                "src": "670:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 30,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "670:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "660:21:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_UserSchema_$11_storage",
                              "typeString": "struct MasterContract.UserSchema storage ref"
                            }
                          },
                          "id": 32,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "status",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 8,
                          "src": "660:28:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "53686f756c64206e6f742062652072656769737465726564206265666f726521",
                        "id": 34,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "690:34:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0acc2f19e626cb0cf829ed19414cc0be46076d532ed8b9282cfa95da4f7f23cf",
                          "typeString": "literal_string \"Should not be registered before!\""
                        },
                        "value": "Should not be registered before!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0acc2f19e626cb0cf829ed19414cc0be46076d532ed8b9282cfa95da4f7f23cf",
                          "typeString": "literal_string \"Should not be registered before!\""
                        }
                      ],
                      "id": 27,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        142,
                        143
                      ],
                      "referencedDeclaration": 143,
                      "src": "651:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 35,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "651:74:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 36,
                  "nodeType": "ExpressionStatement",
                  "src": "651:74:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 43,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 37,
                          "name": "storeUser",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15,
                          "src": "736:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserSchema_$11_storage_$",
                            "typeString": "mapping(address => struct MasterContract.UserSchema storage ref)"
                          }
                        },
                        "id": 40,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 38,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 139,
                            "src": "746:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 39,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "746:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "736:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserSchema_$11_storage",
                          "typeString": "struct MasterContract.UserSchema storage ref"
                        }
                      },
                      "id": 41,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "name",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4,
                      "src": "736:26:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 42,
                      "name": "userName",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20,
                      "src": "765:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "736:37:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 44,
                  "nodeType": "ExpressionStatement",
                  "src": "736:37:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 51,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 45,
                          "name": "storeUser",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15,
                          "src": "783:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserSchema_$11_storage_$",
                            "typeString": "mapping(address => struct MasterContract.UserSchema storage ref)"
                          }
                        },
                        "id": 48,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 46,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 139,
                            "src": "793:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 47,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "793:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "783:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserSchema_$11_storage",
                          "typeString": "struct MasterContract.UserSchema storage ref"
                        }
                      },
                      "id": 49,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "email",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6,
                      "src": "783:27:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 50,
                      "name": "userEmail",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22,
                      "src": "813:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "783:39:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 52,
                  "nodeType": "ExpressionStatement",
                  "src": "783:39:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 59,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 53,
                          "name": "storeUser",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15,
                          "src": "832:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserSchema_$11_storage_$",
                            "typeString": "mapping(address => struct MasterContract.UserSchema storage ref)"
                          }
                        },
                        "id": 56,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 54,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 139,
                            "src": "842:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 55,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "842:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "832:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserSchema_$11_storage",
                          "typeString": "struct MasterContract.UserSchema storage ref"
                        }
                      },
                      "id": 57,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "publicKey",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10,
                      "src": "832:31:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 58,
                      "name": "publicKey",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24,
                      "src": "866:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "832:43:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 60,
                  "nodeType": "ExpressionStatement",
                  "src": "832:43:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 67,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 61,
                          "name": "storeUser",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15,
                          "src": "885:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserSchema_$11_storage_$",
                            "typeString": "mapping(address => struct MasterContract.UserSchema storage ref)"
                          }
                        },
                        "id": 64,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 62,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 139,
                            "src": "895:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 63,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "895:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "885:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserSchema_$11_storage",
                          "typeString": "struct MasterContract.UserSchema storage ref"
                        }
                      },
                      "id": 65,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "status",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8,
                      "src": "885:28:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 66,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "916:4:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "885:35:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 68,
                  "nodeType": "ExpressionStatement",
                  "src": "885:35:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 72,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 139,
                          "src": "951:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 73,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "951:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 69,
                        "name": "registeredUsers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18,
                        "src": "930:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 71,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "930:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) returns (uint256)"
                      }
                    },
                    "id": 74,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "930:32:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 75,
                  "nodeType": "ExpressionStatement",
                  "src": "930:32:0"
                }
              ]
            },
            "documentation": "@dev Register User\n@param userName: User Name\n@param userEmail: User mail id",
            "id": 77,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "registerUser",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 25,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 20,
                  "name": "userName",
                  "nodeType": "VariableDeclaration",
                  "scope": 77,
                  "src": "540:22:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 19,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "540:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 22,
                  "name": "userEmail",
                  "nodeType": "VariableDeclaration",
                  "scope": 77,
                  "src": "572:23:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 21,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "572:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24,
                  "name": "publicKey",
                  "nodeType": "VariableDeclaration",
                  "scope": 77,
                  "src": "605:23:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 23,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "605:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "530:104:0"
            },
            "returnParameters": {
              "id": 26,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "641:0:0"
            },
            "scope": 87,
            "src": "509:460:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 85,
              "nodeType": "Block",
              "src": "1041:39:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 83,
                    "name": "registeredUsers",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 18,
                    "src": "1058:15:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "functionReturnParameters": 82,
                  "id": 84,
                  "nodeType": "Return",
                  "src": "1051:22:0"
                }
              ]
            },
            "documentation": null,
            "id": 86,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAllUsers",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 78,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "995:2:0"
            },
            "returnParameters": {
              "id": 82,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 81,
                  "name": "users",
                  "nodeType": "VariableDeclaration",
                  "scope": 86,
                  "src": "1018:22:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 79,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1018:7:0",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 80,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "1018:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1017:24:0"
            },
            "scope": 87,
            "src": "975:105:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 88,
        "src": "67:1016:0"
      }
    ],
    "src": "0:1084:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.16+commit.9c3226ce.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0x18746fF864D8DB4BE633C1771Ce612EF765f45bC",
      "transactionHash": "0xe73b3963a6cd03beb6a497d48687cff5e5158544c89c451f2f091601a5d91f34"
    },
    "1599657762490": {
      "events": {},
      "links": {},
      "address": "0x179cb51f5173562e3b2955Bda9dE6D88CC4C8ac2",
      "transactionHash": "0x8704648e76dd6dbba258de3e512cb7d1ca4fe1592ff4ea3c47817baaf323fa4c"
    },
    "1599658736927": {
      "events": {},
      "links": {},
      "address": "0x9b7D68289807a9C0Cac14868d3cA1EB27aB7b0Bd",
      "transactionHash": "0x792ec70bbd4ff60f1fc304cfc6487f439b4d58cd4e187c57f620f178b26448f1"
    },
    "1599658796792": {
      "events": {},
      "links": {},
      "address": "0x9b7D68289807a9C0Cac14868d3cA1EB27aB7b0Bd",
      "transactionHash": "0x792ec70bbd4ff60f1fc304cfc6487f439b4d58cd4e187c57f620f178b26448f1"
    },
    "1599676198871": {
      "events": {},
      "links": {},
      "address": "0x9b7D68289807a9C0Cac14868d3cA1EB27aB7b0Bd",
      "transactionHash": "0x792ec70bbd4ff60f1fc304cfc6487f439b4d58cd4e187c57f620f178b26448f1"
    },
    "1599680144721": {
      "events": {},
      "links": {},
      "address": "0x9b7D68289807a9C0Cac14868d3cA1EB27aB7b0Bd",
      "transactionHash": "0x792ec70bbd4ff60f1fc304cfc6487f439b4d58cd4e187c57f620f178b26448f1"
    },
    "1599680372528": {
      "events": {},
      "links": {},
      "address": "0x9b7D68289807a9C0Cac14868d3cA1EB27aB7b0Bd",
      "transactionHash": "0x792ec70bbd4ff60f1fc304cfc6487f439b4d58cd4e187c57f620f178b26448f1"
    },
    "1599712902187": {
      "events": {},
      "links": {},
      "address": "0x9b7D68289807a9C0Cac14868d3cA1EB27aB7b0Bd",
      "transactionHash": "0x792ec70bbd4ff60f1fc304cfc6487f439b4d58cd4e187c57f620f178b26448f1"
    },
    "1599713824923": {
      "events": {},
      "links": {},
      "address": "0x9b7D68289807a9C0Cac14868d3cA1EB27aB7b0Bd",
      "transactionHash": "0x2e65862be1bbfc44e0bbe254093906f0dcc8128d49a303801285d1ac683b0400"
    },
    "1599733666153": {
      "events": {},
      "links": {},
      "address": "0x9b7D68289807a9C0Cac14868d3cA1EB27aB7b0Bd",
      "transactionHash": "0x2e65862be1bbfc44e0bbe254093906f0dcc8128d49a303801285d1ac683b0400"
    },
    "1599738735033": {
      "events": {},
      "links": {},
      "address": "0x9b7D68289807a9C0Cac14868d3cA1EB27aB7b0Bd",
      "transactionHash": "0x2e65862be1bbfc44e0bbe254093906f0dcc8128d49a303801285d1ac683b0400"
    },
    "1599748550396": {
      "events": {},
      "links": {},
      "address": "0x2fA69C69E07E2dDA84525AF7Dd56Aa8177102257",
      "transactionHash": "0x078e5459fdca241b42e58ba53ffe11447a02b5e60468d52c3a67759ab695bfbe"
    },
    "1600006111139": {
      "events": {},
      "links": {},
      "address": "0x1F788F7AA80697414ed3DFC81E50DAf59f5281BD",
      "transactionHash": "0xe9de9787dfacef3049652ee15cb433869f02fe5a8f48b2811371facd0416aa19"
    }
  },
  "schemaVersion": "3.3.1",
  "updatedAt": "2020-11-03T14:34:13.785Z",
  "networkType": "ethereum",
  "devdoc": {
    "methods": {
      "registerUser(string,string,string)": {
        "details": "Register User",
        "params": {
          "userEmail": ": User mail id",
          "userName": ": User Name"
        }
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}